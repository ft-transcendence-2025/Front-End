limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

upstream gateway_upstream {
    server api-gateway-1:3000 max_fails=3 fail_timeout=10s;
    server api-gateway-2:3000 max_fails=3 fail_timeout=10s;
    # server api-gateway-3:3000 max_fails=3 fail_timeout=10s;
    # server api-gateway-4:3000 max_fails=3 fail_timeout=10s;
    least_conn;
}


server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }

    location /api/ {
        # limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://gateway_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        # Alta disponibilidade: pular para pr√≥ximo servidor em caso de erro
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;

        # Timeouts para evitar travamentos com containers offline
        proxy_connect_timeout 2s;
        proxy_send_timeout 5s;
        proxy_read_timeout 20s;
    }

    location /ws {
        proxy_pass http://gateway_upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;

        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        # proxy_connect_timeout 2s;
        # proxy_send_timeout 5s;
        # proxy_read_timeout 5s;
    }


    location /nginx_status {
        stub_status;
        allow 127.0.0.1;
        allow 172.16.0.0/12; # Allow Docker network
        deny all;
    }
}

# Redirecionamento HTTP para HTTPS
server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}
